include:
  - path: ../../common/postgres.compose.yml
    env_file: .postgres.env
  - path: ../../common/adminer.compose.yml
  - path: ../../common/redis.compose.yml

# https://glitchtip.com/documentation/install#docker-compose
# https://glitchtip.com/assets/docker-compose.sample.yml

# https://glitchtip.com/documentation/install#configuration
x-environment: &default-environment
  DATABASE_URL: postgres://postgres:${DB_PASSWORD:?DB_PASSWORD not set}@postgres:5432/postgres
  SECRET_KEY: ${SECRET_KEY} # best to run openssl rand -hex 32
  EMAIL_URL: consolemail:// # Example smtp://email:password@smtp_url:port https://glitchtip.com/documentation/install#configuration
  GLITCHTIP_DOMAIN: https://glitchtip.d3strukt0r.dev # Change this to your domain
  DEFAULT_FROM_EMAIL: ${DEFAULT_FROM_EMAIL} # Change this to your email
  CELERY_WORKER_AUTOSCALE: '1,3' # Scale between 1 and 3 to prevent excessive memory usage. Change it or remove to set it to the number of cpu cores.
  CELERY_WORKER_MAX_TASKS_PER_CHILD: '10000'
  ENABLE_USER_REGISTRATION: 'false' # Set to "false" to disable user registration

x-depends_on: &default-depends_on
  - postgres
  - redis

services:
  web:
    extends:
      file: ../../common/snippets.yml
      service: common-service
    image: glitchtip/glitchtip
    deploy:
      resources:
        limits:
          memory: 400M
    # TODO: How to handle this?
    #healthcheck:
    #  test: curl --fail http://localhost || exit 1
    #  test: wget --no-verbose --tries=1 --spider http://localhost || exit 1
    logging:
      driver: fluentd
      options:
        tag: ${COMPOSE_PROJECT_NAME}.prod.web
    depends_on: *default-depends_on
    environment: *default-environment
    networks:
      - default
      - traefik_proxy
    volumes:
      - ./uploads:/code/uploads
    labels:
      - traefik.enable=true
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}.entrypoints=websecure
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}.rule=Host(`${COMPOSE_PROJECT_NAME}.d3strukt0r.dev`)
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}.tls=true
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}.tls.certresolver=le
  worker:
    extends:
      file: ../../common/snippets.yml
      service: common-service
    image: glitchtip/glitchtip
    command: ./bin/run-celery-with-beat.sh
    deploy:
      resources:
        limits:
          memory: 480M
    # TODO: How to handle this?
    #healthcheck:
    #  test: curl --fail http://localhost || exit 1
    #  test: wget --no-verbose --tries=1 --spider http://localhost || exit 1
    logging:
      driver: fluentd
      options:
        tag: ${COMPOSE_PROJECT_NAME}.prod.worker
    depends_on: *default-depends_on
    environment: *default-environment
    volumes:
      - ./uploads:/code/uploads
  migrate:
    extends:
      file: ../../common/snippets.yml
      service: common-service
    image: glitchtip/glitchtip
    command: "./manage.py migrate"
    deploy:
      resources:
        limits:
          memory: 200M
    # TODO: How to handle this?
    #healthcheck:
    #  test: curl --fail http://localhost || exit 1
    #  test: wget --no-verbose --tries=1 --spider http://localhost || exit 1
    logging:
      driver: fluentd
      options:
        tag: ${COMPOSE_PROJECT_NAME}.prod.migrate
    depends_on: *default-depends_on
    environment: *default-environment

networks:
  traefik_proxy:
    external: true
