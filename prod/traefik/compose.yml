# Manage domain access to services
services:
  traefik:
    image: traefik:3.0
    restart: unless-stopped
    command:
      # Tell Traefik to listen to docker
      - --providers.docker=true
      - --providers.docker.exposedByDefault=false
      - --providers.docker.network=traefik_proxy

      # Add HTTP and HTTPS (with Let's Encrypt) entrypoint
      - --entrypoints.web.address=:80
      - --entrypoints.web.http.redirections.entryPoint.to=websecure
      - --entrypoints.web.http.redirections.entryPoint.scheme=https
      - --entrypoints.web.http.redirections.entrypoint.permanent=true
      - --entrypoints.websecure.address=:443
      - --entrypoints.websecure.http3
      - --certificatesresolvers.le.acme.email=${ACME_EMAIL}
      - --certificatesresolvers.le.acme.storage=acme.json
      # - --certificatesresolvers.le.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory
      - --certificatesresolvers.le.acme.dnschallenge=true
      - --certificatesresolvers.le.acme.dnschallenge.provider=cloudflare

      # Enable Traefik dashboard
      - --api.dashboard=true

      #Â Give more logs
      - --log.level=INFO
      - --log.format=json
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 150M
    networks:
      - default
      #- proxy
      - traefik_proxy
    ports:
      # HTTP
      - '80:80'
      # HTTPS
      - '443:443'
      # HTTP/3
      - '443:443/udp'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./acme.json:/acme.json
    environment:
      CF_API_EMAIL: ${CLOUDFLARE_EMAIL}
      CF_API_KEY: ${CLOUDFLARE_API_KEY}
    logging:
      driver: fluentd
      options:
        tag: traefik
    labels:
      traefik.enable: true
      traefik.http.routers.traefik.entrypoints: websecure
      traefik.http.routers.traefik.rule: Host(`traefik.d3strukt0r.dev`)
      traefik.http.routers.traefik.middlewares: traefik_auth
      traefik.http.routers.traefik.tls: true
      traefik.http.routers.traefik.tls.certresolver: le
      traefik.http.routers.traefik.service: api@internal

      # Declaring the user list
      #
      # Note: all dollar signs in the hash need to be doubled for escaping.
      # To create user:password pair, it's possible to use this command:
      # echo $(htpasswd -nb user password) | sed -e s/\\$/\\$\\$/g
      traefik.http.middlewares.traefik_auth.basicauth.users: ${TRAEFIK_USERS}

networks:
  #proxy:
  #  driver: bridge
  traefik_proxy:
    external: true
