# https://glitchtip.com/documentation/install#docker-compose
# https://glitchtip.com/assets/docker-compose.sample.yml

# https://glitchtip.com/documentation/install#configuration
x-environment: &default-environment
  DATABASE_URL: postgres://postgres:postgres@postgres:5432/postgres
  SECRET_KEY: ${SECRET_KEY} # best to run openssl rand -hex 32
  EMAIL_URL: consolemail:// # Example smtp://email:password@smtp_url:port https://glitchtip.com/documentation/install#configuration
  GLITCHTIP_DOMAIN: https://glitchtip.d3strukt0r.dev # Change this to your domain
  DEFAULT_FROM_EMAIL: glitchtip-contact@d3st.dev # Change this to your email
  CELERY_WORKER_AUTOSCALE: "1,3"  # Scale between 1 and 3 to prevent excessive memory usage. Change it or remove to set it to the number of cpu cores.
  CELERY_WORKER_MAX_TASKS_PER_CHILD: "10000"
  #ENABLE_USER_REGISTRATION: "false" # Set to "false" to disable user registration

x-depends_on: &default-depends_on
  - postgres
  - redis

services:
  postgres:
    image: postgres:16
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 100M
    environment:
      POSTGRES_HOST_AUTH_METHOD: "trust"  # Consider removing this and setting a password
      # ********************************************************************************
      # WARNING: POSTGRES_HOST_AUTH_METHOD has been set to "trust". This will allow
      #          anyone with access to the Postgres port to access your database without
      #          a password, even if POSTGRES_PASSWORD is set. See PostgreSQL
      #          documentation about "trust":
      #          https://www.postgresql.org/docs/current/auth-trust.html
      #          In Docker's default configuration, this is effectively any other
      #          container on the same system.
      #
      #          It is not recommended to use POSTGRES_HOST_AUTH_METHOD=trust. Replace
      #          it with "-e POSTGRES_PASSWORD=password" instead to set a password in
      #          "docker run".
      # ********************************************************************************
    volumes:
      - ./database:/var/lib/postgresql/data
  redis:
    image: redis
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 50M
  web:
    image: glitchtip/glitchtip
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 300M
    depends_on: *default-depends_on
    environment: *default-environment
    networks:
      - traefik_proxy
    volumes:
      - ./uploads:/code/uploads
    labels:
      traefik.enable: true
      traefik.http.routers.glitchtip.entrypoints: websecure
      traefik.http.routers.glitchtip.rule: Host(`glitchtip.d3strukt0r.dev`)
      traefik.http.routers.glitchtip.tls: true
      traefik.http.routers.glitchtip.tls.certresolver: le
  worker:
    image: glitchtip/glitchtip
    command: ./bin/run-celery-with-beat.sh
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 400M
    depends_on: *default-depends_on
    environment: *default-environment
    volumes:
      - ./uploads:/code/uploads
  migrate:
    image: glitchtip/glitchtip
    command: "./manage.py migrate"
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 200M
    depends_on: *default-depends_on
    environment: *default-environment

networks:
  traefik_proxy:
    external: true
